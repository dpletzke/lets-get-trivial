{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sorennissen/lighthouse/lets-get-trivial/src/components/Button.jsx\";\n\nfunction Button() {\n  return /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Button;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\"\n};\nexport default Button; // import React from 'react';\n// import PropTypes from 'prop-types';\n// import './button.css';\n// ​\n// /**\n//  * Primary UI component for user interaction\n//  */\n// export const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n//   const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n//   return (\n//     <button\n//       type=\"button\"\n//       className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n//       style={backgroundColor && { backgroundColor }}\n//       {...props}\n//     >\n//       {label}\n//     </button>\n//   );\n// };\n// ​\n// Button.propTypes = {\n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   primary: PropTypes.bool,\n//   /**\n//    * What background color to use\n//    */\n//   backgroundColor: PropTypes.string,\n//   /**\n//    * How large should the button be?\n//    */\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   /**\n//    * Button contents\n//    */\n//   label: PropTypes.string.isRequired,\n//   /**\n//    * Optional click handler\n//    */\n//   onClick: PropTypes.func,\n// };\n// ​\n// Button.defaultProps = {\n//   backgroundColor: null,\n//   primary: false,\n//   size: 'medium',\n//   onClick: undefined,\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Button.jsx\"] = {\n    name: \"Button\",\n    docgenInfo: Button.__docgenInfo,\n    path: \"src/components/Button.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/sorennissen/lighthouse/lets-get-trivial/src/components/Button.jsx"],"names":["Button"],"mappings":";;;AAAA,SAASA,MAAT,GAAkB;AAChB,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQA,M;;;;;;AAIT,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function Button() {\n  return <Button />;\n}\n\nexport default Button;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import './button.css';\n// ​\n// /**\n//  * Primary UI component for user interaction\n//  */\n// export const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n//   const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n//   return (\n//     <button\n//       type=\"button\"\n//       className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n//       style={backgroundColor && { backgroundColor }}\n//       {...props}\n//     >\n//       {label}\n//     </button>\n//   );\n// };\n// ​\n// Button.propTypes = {\n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   primary: PropTypes.bool,\n//   /**\n//    * What background color to use\n//    */\n//   backgroundColor: PropTypes.string,\n//   /**\n//    * How large should the button be?\n//    */\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   /**\n//    * Button contents\n//    */\n//   label: PropTypes.string.isRequired,\n//   /**\n//    * Optional click handler\n//    */\n//   onClick: PropTypes.func,\n// };\n// ​\n// Button.defaultProps = {\n//   backgroundColor: null,\n//   primary: false,\n//   size: 'medium',\n//   onClick: undefined,\n// };\n"]},"metadata":{},"sourceType":"module"}